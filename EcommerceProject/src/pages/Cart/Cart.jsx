import React, { useState } from "react";
import { useCart } from "../../context/CartContext";
import "./Cart.css";
import vnpayLogo from "../../images/vnpay-logo.png";
import momoLogo from "../../images/momo-logo.png";

// üëâ B·∫°n chu·∫©n b·ªã s·∫µn 2 ·∫£nh QR trong th∆∞ m·ª•c images
// import vnpayQR from "../../images/vnpay-qr-demo.png";
// import momoQR from "../../images/momo-qr-demo.png";

export default function Cart() {
  const { cart, removeFromCart } = useCart();
  const [promo, setPromo] = useState("");
  const [phone, setPhone] = useState("");
  const [email, setEmail] = useState("");
  const [selected, setSelected] = useState([]); // danh s√°ch s·∫£n ph·∫©m ƒë∆∞·ª£c ch·ªçn
  const [qrCode, setQrCode] = useState(null); // ‚úÖ ·∫£nh QR hi·ªán t·∫°i (VNPay ho·∫∑c MoMo)

  const toggleSelect = (id) => {
    setSelected((prev) =>
      prev.includes(id) ? prev.filter((x) => x !== id) : [...prev, id]
    );
  };

  const applyPromo = () => {
    alert(`M√£ ∆∞u ƒë√£i: ${promo || "Ch∆∞a nh·∫≠p"}`);
  };

  async function payVnpay() {
    const res = await fetch("http://localhost:8888/create_payment", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ amount: total }), // g·ª≠i t·ªïng ti·ªÅn
    });
    const data = await res.json();

    console.log("Payment URL: ", data);

    window.location.href = data.data; // redirect t·ªõi VNPay
  }

  async function payMomo() {
    const res = await fetch("http://localhost:8888/create-momo-payment", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        amount: total, // t·ªïng ti·ªÅn
        orderInfo: "Thanh to√°n ƒë∆°n h√†ng #123",
      }),
    });

    const data = await res.json();
    console.log("MoMo response:", data);

    // ‚úÖ Redirect t·ªõi payUrl
    if (data && data.payUrl) {
      window.location.href = data.payUrl;
    } else {
      alert("Kh√¥ng nh·∫≠n ƒë∆∞·ª£c payUrl t·ª´ MoMo");
    }
  }

  // Ch·ªâ t√≠nh t·ªïng c√°c s·∫£n ph·∫©m ƒë∆∞·ª£c ch·ªçn
  const total = cart.reduce((sum, item) => {
    if (!selected.includes(item.id)) return sum;
    const price = item?.variants?.[0]?.calculated_price?.calculated_amount || 0;

    return sum + price;
  }, 0);

  if (!cart.length) {
    return <div className="cart-empty">üõí Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng</div>;
  }

  return (
    <div className="cart-page">
      <div className="cart-wrapper">
        {/* LEFT */}
        <div className="cart-left">
          <h2>Gi·ªè h√†ng ({cart.length} s·∫£n ph·∫©m)</h2>

          {cart.map((item, index) => {
            // const price = item?.variants?.[0]?.prices?.[0]?.amount / 100 || 0;
            const price =
              item?.variants?.[0]?.calculated_price?.calculated_amount || 0;

            return (
              <div key={index} className="cart-row">
                <input
                  type="checkbox"
                  className="cart-check"
                  checked={selected.includes(item.id)}
                  onChange={() => toggleSelect(item.id)}
                />
                <img
                  src={item.thumbnail || "https://via.placeholder.com/100"}
                  alt={item.title}
                />
                <div className="cart-info">
                  <h3>{item.title}</h3>
                  <p className="price">{price.toLocaleString()} ƒë</p>
                </div>
                <button
                  className="remove"
                  onClick={() => removeFromCart(item.id)}
                >
                  ‚úï
                </button>
              </div>
            );
          })}
        </div>

        {/* RIGHT */}
        <div className="cart-right">
          <div className="summary">
            <h3>Thanh to√°n</h3>

            {/* M√£ ∆∞u ƒë√£i */}
            <div className="input-group">
              <label>M√£ ∆∞u ƒë√£i</label>
              <div className="input-row">
                <input
                  type="text"
                  placeholder="Nh·∫≠p m√£"
                  value={promo}
                  onChange={(e) => setPromo(e.target.value)}
                />
                <button className="apply-btn" onClick={applyPromo}>
                  √Åp d·ª•ng
                </button>
              </div>
            </div>

            {/* S·ªë ƒëi·ªán tho·∫°i */}
            <div className="input-group">
              <label>Li√™n h·ªá</label>
              <div className="input-row phone">
                <span className="prefix">+84</span>
                <input
                  type="tel"
                  placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                  value={phone}
                  onChange={(e) => setPhone(e.target.value)}
                />
              </div>
            </div>

            {/* Email */}
            <div className="input-group">
              <label>Email</label>
              <div className="input-row">
                <input
                  type="text"
                  placeholder="Nh·∫≠p email c·ªßa b·∫°n"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                />
              </div>
            </div>

            {/* T·ªïng ti·ªÅn */}
            <div className="line">
              <span>T·ªïng ti·ªÅn</span>
              <strong>{total.toLocaleString()} ƒë</strong>
            </div>

            {/* N√∫t thanh to√°n nhanh */}
            <div className="pay-alt">
              <button className="qr-btn vnpay-btn" onClick={() => payVnpay()}>
                <img src={vnpayLogo} alt="VNPay" className="pay-logo" />
                Thanh to√°n v·ªõi VNPay QR
              </button>
              <button className="qr-btn momo-btn" onClick={() => payMomo()}>
                <img src={momoLogo} alt="MoMo" className="pay-logo" />
                Thanh to√°n v·ªõi MoMo QR
              </button>
            </div>

            {/* Hi·ªÉn th·ªã QR Code */}
            {qrCode && (
              <div className="qr-preview">
                <h4>Qu√©t m√£ ƒë·ªÉ thanh to√°n</h4>
                <img src={qrCode} alt="QR Code" className="qr-image" />
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}
