import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import CategoryBar from "../../components/CategoryBar/CategoryBar";
import ProductCard from "../../components/productCard/ProductCard";
import HeroBanner from "../../components/Banner/HeroBanner";
import "./home.css";
import InfinityScrollBar from "../../components/InfinityScrollBar/InfinityScrollBar";

export default function Home() {
  const [products, setProducts] = useState([]);
  const navigate = useNavigate();
  const regionId = process.env.REACT_APP_MEDUSA_REGION_ID;

  const handleCategoryClick = (category) => {
    navigate(`/products?category=${category}`);
  };

  useEffect(() => {
    fetch(
      `http://localhost:9000/store/products?region_id=${regionId}&limit=1000`,
      {
        headers: {
          "x-publishable-api-key": process.env.REACT_APP_MEDUSA_PUBLISHABLE_KEY,
        },
      }
    )
      .then((res) => res.json())
      .then((data) => {
        console.log(
          "Test products:",
          data.products.map((p) => ({
            title: p.title,
            created_at: p.created_at,
          }))
        );

        setProducts(data.products || []);
      })
      .catch((err) => console.error("L·ªói khi l·∫•y s·∫£n ph·∫©m:", err));
  }, []);

  // üî• L·∫•y ng√†y hi·ªán t·∫°i tr·ª´ 30 ng√†y
  const now = new Date();
  const thirtyDaysAgo = new Date();
  thirtyDaysAgo.setDate(now.getDate() - 30);

  // üïí L·ªçc s·∫£n ph·∫©m t·∫°o trong 30 ng√†y qua
  const recentProducts = products.filter((p) => {
    if (!p.created_at) return false;
    const createdAt = new Date(p.created_at);
    return createdAt >= thirtyDaysAgo;
  });

  // üîù 8 s·∫£n ph·∫©m n·ªïi b·∫≠t
  const bestSellers = products.slice(0, 8);

  return (
    <div className="container">
      {/* ‚úÖ Banner */}
      <HeroBanner />

      <InfinityScrollBar />

      {/* Gi·ªõi thi·ªáu */}
      <section className="intro section-box">
        <h1>Digitech Shop</h1>
        <p>
          Digitech Shop l√† ƒë·ªãa ch·ªâ ƒë√°ng tin c·∫≠y, chuy√™n cung c·∫•p ph·∫ßn m·ªÅm b·∫£n
          quy·ªÅn v√† d·ªãch v·ª• n√¢ng c·∫•p t√†i kho·∫£n ch√≠nh ch·ªß. Ch√∫ng t√¥i cam k·∫øt mang
          ƒë·∫øn ch·∫•t l∆∞·ª£ng v∆∞·ª£t tr·ªôi, gi√° c·∫£ h·ª£p l√Ω v√† s·∫µn s√†ng h·ªó tr·ª£ t·∫≠n t√¢m
          24/7.
        </p>
      </section>

      {/* Thanh category */}
      <CategoryBar onCategoryClick={handleCategoryClick} />

      {/* üî• S·∫£n ph·∫©m n·ªïi b·∫≠t */}
      <section className="highlight-box">
        <div className="highlight-left">
          <span className="tag">üî• Xu H∆∞·ªõng 2025</span>
          <h2>S·∫£n Ph·∫©m N·ªïi B·∫≠t Nh·∫•t NƒÉm 2025</h2>
          <p>
            Digitech Shop cung c·∫•p ph·∫ßn m·ªÅm b·∫£n quy·ªÅn ch√≠nh h√£ng ƒëa d·∫°ng: AI,
            Microsoft Office, thi·∫øt k·∫ø ƒë·ªì h·ªça, VPN/Antivirus... ƒë√°p ·ª©ng m·ªçi nhu
            c·∫ßu h·ªçc t·∫≠p, c√¥ng vi·ªác v√† gi·∫£i tr√≠ v·ªõi gi√° c·ª±c k·ª≥ c·∫°nh tranh.
          </p>
          <button className="btn-contact" onClick={() => navigate("/products")}>
            Li√™n h·ªá t∆∞ v·∫•n t·∫°i ƒë√¢y ‚Üí
          </button>
        </div>

        <div className="highlight-right">
          <h3>N·ªïi b·∫≠t</h3>
          {bestSellers.length > 0 ? (
            <>
              {bestSellers.length > 4 && (
                <div className="bestseller-scroll-vertical">
                  <ul className="bestseller-list-vertical">
                    {bestSellers.slice(2).map((p) => {
                      // ‚úÖ L·∫•y gi√° chu·∫©n theo calculated_price gi·ªëng ProductCard
                      const price =
                        p?.variants?.[0]?.calculated_price?.calculated_amount ||
                        0;
                      const image = p.thumbnail || "/default-product.png";

                      return (
                        <li
                          key={p.id}
                          className="bestseller-item"
                          onClick={() => navigate(`/products/${p.id}`)}
                        >
                          <img src={image} alt={p.title} />
                          <div>
                            <h4>{p.title}</h4>
                            <p className="price-highlight">
                              {price.toLocaleString()} ƒë
                            </p>
                          </div>
                        </li>
                      );
                    })}
                  </ul>
                </div>
              )}
            </>
          ) : (
            <p>ƒêang t·∫£i s·∫£n ph·∫©m...</p>
          )}
        </div>
      </section>

      {/* üõí S·∫£n ph·∫©m m·ªõi nh·∫•t trong 30 ng√†y */}
      <section className="product-section">
        <h2>S·∫£n ph·∫©m m·ªõi nh·∫•t</h2>
        <div className="product-grid">
          {recentProducts.length > 0 ? (
            recentProducts
              .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))
              .slice(0, 8)
              .map((p) => <ProductCard key={p.id} product={p} />)
          ) : (
            <p>Kh√¥ng c√≥ s·∫£n ph·∫©m m·ªõi nh·∫•t</p>
          )}
        </div>
      </section>
    </div>
  );
}
